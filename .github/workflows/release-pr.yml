name: Create and Merge Release PRs

on:
  workflow_call:
    inputs:
      new_tag:
        description: "The new SemVer tag"
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  release_pr:
    runs-on: ubuntu-latest
    env:
      NEW_TAG: ${{ inputs.new_tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create Changelog PR
        id: create_pr
        run: |
          PR_URL=$(gh pr create \
            --head changelog/${NEW_TAG} \
            --base release \
            --title "üîñ Update CHANGELOG for ${NEW_TAG}" \
            --body "Automated changelog update for ${NEW_TAG}")
          echo "PR_URL=$PR_URL" >> $GITHUB_OUTPUT

      - name: Add changelog label
        run: |
          gh pr edit "${{ steps.create_pr.outputs.PR_URL }}" --add-label changelog

      - name: Wait for status checks
        run: |
          for i in {1..30}; do
            STATUS=$(gh pr status --json statusCheckRollup -q '.currentBranch.statusCheckRollup.state' --branch changelog/${NEW_TAG})
            if [[ "$STATUS" == "SUCCESS" ]]; then
              echo "‚úÖ Status checks passed"
              exit 0
            fi
            echo "‚è≥ Waiting for status checks (attempt $i/30)..."
            sleep 10
          done
          echo "‚ùå Status checks did not pass within timeout"
          gh pr status --json statusCheckRollup --branch changelog/${NEW_TAG}
          exit 1

      - name: Merge Changelog PR
        run: |
          gh pr merge "${{ steps.create_pr.outputs.PR_URL }}" \
            --squash --delete-branch \
            --admin || {
              echo "‚ùå Failed to merge PR. Debugging info:"
              gh pr view "${{ steps.create_pr.outputs.PR_URL }}" --json state,mergeable,labels,headRefName,baseRefName
              exit 1
            }

      - name: Create & auto-merge Release‚ÜíProduction PR
        run: |
          PR_URL=$(gh pr create \
            --head release \
            --base production \
            --title "üîÄ Merge ${NEW_TAG} into production" \
            --body "Automated release after tagging ${NEW_TAG}")
          gh pr merge "$PR_URL" \
            --auto --squash
