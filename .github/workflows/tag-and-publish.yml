name: Tag And Publish New Release

on:
  pull_request:
    types: [closed]
    branches: [release]

permissions:
  contents: write
  pull-requests: write

jobs:
  # Create Tag
  semver_changelog:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.semver.outputs.tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create SemVer Tag and Release
        id: semver
        uses: K-Phoen/semver-release-action@v1.3.2
        with:
          release_branch: release
          release_strategy: release
          tag_format: v%major%.%minor%.%patch%
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Publish New Release
  release_pr:
    needs: semver_changelog
    runs-on: ubuntu-latest

    env:
      NEW_TAG: ${{ needs.semver_changelog.outputs.tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0         # full history
          fetch-tags: true

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: release
          fetch-depth: 0

      - name: Create changelog branch
        run: |
          git checkout -b changelog/${NEW_TAG}

      - name: Re-apply changelog changes
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.NEW_TAG }}
          writeToFile: true

      - name: Commit updated CHANGELOG.md
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG.md for ${NEW_TAG}"

      - name: Push changelog branch
        run: git push --set-upstream origin changelog/${NEW_TAG}

      - name: Push empty commit to retrigger checks
        # if: steps.some_status_check_failed
        run: |
          git checkout changelog/${NEW_TAG}
          git commit --allow-empty -m "üåê retrigger status checks"
          git push

      - name: Create, label, and squash-merge Changelog PR into release
        run: |
          gh pr create \
            --head changelog/${NEW_TAG} \
            --base release \
            --title "üîñ Update CHANGELOG for ${NEW_TAG}" \
            --body "Automated changelog update for ${NEW_TAG}" && \

          gh pr edit "$PR_URL" --add-label changelog
          
          gh pr merge \
            --auto --delete-branch --squash

      - name: Create & auto-merge Release‚ÜíProduction PR
        run: |
          gh pr create \
            --head release \
            --base production \
            --title "üîÄ Merge ${NEW_TAG} into production" \
            --body "Automated release after tagging ${NEW_TAG}" && \
          gh pr merge \
            --auto --squash
