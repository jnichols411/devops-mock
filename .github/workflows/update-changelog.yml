name: Update Changelog

on:
  workflow_call:
    inputs:
      new_tag:
        description: "The new SemVer tag"
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  update_changelog:
    runs-on: ubuntu-latest
    env:
      NEW_TAG: ${{ inputs.new_tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Debug tag value
        run: |
          echo "NEW_TAG: ${{ env.NEW_TAG }}"
          if [[ -z "${{ env.NEW_TAG }}" ]]; then
            echo "‚ùå NEW_TAG is empty"
            exit 1
          fi

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create changelog branch
        run: |
          git checkout release
          git checkout -b changelog/${NEW_TAG}

      - name: Debug commits and tags
        run: |
          echo "Commits since v0.17.8:"
          git log v0.17.8..HEAD --oneline || echo "No commits found"
          echo "PRs associated with commits:"
          git log v0.17.8..HEAD --pretty=%H | while read commit; do
            gh api repos/${{ github.repository }}/commits/$commit/pulls | jq '.[] | {number: .number, title: .title, state: .state}'
          done || echo "No PRs found"
          echo "Current tags:"
          git tag -l

      - name: Re-apply changelog changes
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.NEW_TAG }}
          writeToFile: true
          includeInvalidCommits: true

      - name: Stage and commit changelog changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          if [[ -n "$(git status --porcelain CHANGELOG.md)" ]]; then
            git add CHANGELOG.md
            git commit -m "docs: update CHANGELOG.md for ${NEW_TAG}"
          else
            echo "‚ùå No changes to commit in CHANGELOG.md"
            exit 1
          fi

      - name: Debug changelog output
        run: |
          echo "Changelog action output:"
          cat CHANGELOG.md || echo "CHANGELOG.md not found"
          echo "Git status:"
          git status
          echo "Diff since last commit:"
          git diff HEAD^ HEAD -- CHANGELOG.md || echo "No diff found"
          echo "Commits between tags:"
          git log v0.17.8..HEAD --oneline || echo "No commits found"

      - name: Check for changelog changes
        id: check_changes
        run: |
          if git diff --quiet HEAD^ HEAD -- CHANGELOG.md; then
            echo "‚ùå No changes detected in CHANGELOG.md"
            exit 1
          else
            echo "‚úÖ Changes detected in CHANGELOG.md"
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi

      - name: Push changelog branch
        run: git push --set-upstream origin changelog/${NEW_TAG}

      - name: Push empty commit to retrigger checks
        run: |
          git checkout changelog/${NEW_TAG}
          git commit --allow-empty -m "üåê retrigger status checks"
          git push

      - name: Verify branch exists
        run: |
          git fetch origin
          if git ls-remote --heads origin changelog/${NEW_TAG} | grep -q changelog/${NEW_TAG}; then
            echo "‚úÖ Branch changelog/${NEW_TAG} exists in remote"
          else
            echo "‚ùå Branch changelog/${NEW_TAG} does not exist in remote"
            exit 1
          fi
